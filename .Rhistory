library(VarExp)
library(VarExp)
library(VarExp)
library(VarExp)
library(VarExp)
version()
R.version()
R.version
genoMat = matrix(rbinom(5*5,2,runif(5,0,1)),nrow=5,ncol=5)
sameRefAllele = rbinom(5,1,0.7)
newGenoMat = changeCoding(genoMat, sameRefAllele)
changeCoding = function(x,v) {
tt = x
for (i in 1:dim(x)[1]) {
if (!v[i]) {
tt[i,] = -tt[i,] + 2
}
}
return(tt)
}
newGenoMat = changeCoding(genoMat, sameRefAllele)
genoMat = matrix(rbinom(5*5,2,runif(5,0,1)),nrow=5,ncol=5)
sameRefAllele = rbinom(5,1,0.7)
newGenoMat = changeCoding(genoMat, sameRefAllele)
load("/home/vince/Téléchargements/ind(1).rda")
library(VarExp)
?data
library(VarExp)
library(VarExp)
prepareResultTable = function(df, ancest, pheno, expo) {
df = df[df$POP == ancest,]
if (dim(df)[1] == 0) {
stop(paste0("Cannot find ancestry ", ancest, " in in the results dataframe"), call. = F)
}
df = df[df$PHENO == pheno & df$EXPO == expo,]
if (dim(df)[1] == 0) {
stop(paste0("Cannot find phenotype - exposure ", paste(pheno," ", expo,sep = ""), " in the results dataframe"), call. = F)
}
return(df)
}
setwd("/home/vince/Bureau/PACK_R/example/hapgen2/")
I = read.table("gwas_result2.example")
I = read.table("gwas_result2.example", header = T, sep = "\t")
I
I = read.table("gwas_result3.example", header = T, sep = "\t")
I = read.table("gwas_result3.example", header = T, sep = "\t")
I = read.table("gwas_result3.example", header = T, sep = "\t")
I = read.table("gwas_result3.example", header = T)
I = read.table("gwas_result3.example")
I = read.table("gwas_result3.example",sep="\t")
I = read.table("gwas_result3.example", header = T, sep = "\t")
I
J = prepareResultTable(I,"EUR","pheno1","expo1")
J
GWAS = read.table("../../PACKAGE/VarExp/example/GWAS_data")
J = prepareResultTable(GWAS,"EUR","pheno1","expo1")
J
GWAS
library(VarExp)
library(VarExp)
GWAS = read.table("/home/vince/Bureau/PACK_R/PACKAGE/VarExp/example/GWAS_data", sep = "\t", header = T)
COHORT = read.table("/home/vince/Bureau/PACK_R/PACKAGE/VarExp/example/COHORT_data", sep = "\t", header = T)
save.image("~/Bureau/PACK_R/PACKAGE/VarExp/data/example.RData")
load("data/example.RData")
GWAS
save(GWAS, file = "data/GWAS_data.Rda")
save(GWAS, file = "data/GWAS_data.rda")
load("data/GWAS_data.rda")
GWAS
COHORT = read.table("../example/COHORT_data")
COHORT
COHORT = read.table("../example/COHORT_data", header = T)
COHORT
save(COHORT,file="data/COHORT.rda")
GWAS
save(GWAS,file="data/GWAS.rda")
GWAS = read.table("../example/GWAS_data", header = T)
save(GWAS,file="data/GWAS.rda")
data(GWAS)
GWAS
data(GWAS)
GWAS
data("COHORT")
COHORT
load(GWAS)
GWAS
load("GWAS")
data("GWAS")
data("GWAS")
GWAS
COHORT
data("COHORT")
COHORT
library(VarExp)
S = getGenoCorMatrix(GWAS$CHR, GWAS$POS, GWAS$A0, "EUR")
library(VarExp)
COHORT
data("COHORT")
COHORT
data("GWAS")
calculateVarFrac_v2
data("GWAS")
data("COHORT")
S = getGenoCorMatrix(GWAS$CHR, GWAS$POS, GWAS$A0, "EUR")
parsY = calculateContParams(COHORT$pheno1_N, COHORT$pheno1_Mean, COHORT$pheno1_SD)
std_betaI = standardizeBeta(GWAS$MAIN_EFFECT, GWAS$INT_EFFECT, GWAS$FREQ_A0, parsE[1], parsE[2], "I")
parsE = calculateExpoParams(COHORT, "pheno1", "expo1")
parsE = calculateExpoParams(COHORT, "pheno1", "expo1")
calculateExpoParams
COHORT
colnames(COHORT)
colnames(COHORT)[6] = "pheno1_expo1_Mean"
colnames(COHORT)[7] = "pheno1_expo1_SD"
colnames(COHORT)
std_betaI = standardizeBeta(GWAS$MAIN_EFFECT, GWAS$INT_EFFECT, GWAS$FREQ_A0, parsE[1], parsE[2], "I")
parsE = calculateExpoParams(COHORT, "pheno1", "expo1")
std_betaG = standardizeBeta(GWAS$MAIN_EFFECT, GWAS$INT_EFFECT, GWAS$FREQ_A0, parsE[1], parsE[2], "G")
std_betaI = standardizeBeta(GWAS$MAIN_EFFECT, GWAS$INT_EFFECT, GWAS$FREQ_A0, parsE[1], parsE[2], "I")
fracG = calculateVarFrac_v2(std_betaG, std_betaI, S, parsY[2], sum(COHORT$pheno1_N), "G")
fracI = calculateVarFrac_v2(std_betaG, std_betaI, S, parsY[2], sum(COHORT$pheno1_N), "I")
fracJ = calculateVarFrac_v2(std_betaG, std_betaI, S, parsY[2], sum(COHORT$pheno1_N), "J")
fracG
fracI
fracJ
save(COHORT, file="data/COHORT.rda")
library(VarExp)
data("GWAS")
data("COHORT")
COHORT
S = getGenoCorMatrix(GWAS$CHR, GWAS$POS, GWAS$A0, "EUR")
parsY = calculateContParams(COHORT$pheno1_N, COHORT$pheno1_Mean, COHORT$pheno1_SD)
parsE = calculateExpoParams(COHORT, "pheno1", "expo1")
std_betaG = standardizeBeta(GWAS$MAIN_EFFECT, GWAS$INT_EFFECT, GWAS$FREQ_A0, parsE[1], parsE[2], "G")
std_betaI = standardizeBeta(GWAS$MAIN_EFFECT, GWAS$INT_EFFECT, GWAS$FREQ_A0, parsE[1], parsE[2], "I")
fracG = calculateVarFrac_v2(std_betaG, std_betaI, S, parsY[2], sum(COHORT$pheno1_N), "G")
fracI = calculateVarFrac_v2(std_betaG, std_betaI, S, parsY[2], sum(COHORT$pheno1_N), "I")
fracJ = calculateVarFrac_v2(std_betaG, std_betaI, S, parsY[2], sum(COHORT$pheno1_N), "J")
fracG
fracI
fracJ
print(paste("Estimated fraction (G, I, J)", c(fracG,fracI,fracJ),sep="\n"))
print("Estimated fraction (G, I, J)")
print(c(fracG,fracI,fracJ))
library(VarExp)
COHORT
library(VarExp)
